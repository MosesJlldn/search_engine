 
 
 
 
Однажды немецкий математик Вильгельм Йордан 
 сел решать очередную систему уравнений. Он любил этим заниматься и в  свободное время совершенствовал свои навыки.  Но вот настал момент, когда ему наскучили  все методы решения и 
 в  том числе... 
Предположим, дана система с тремя уравнениями, тремя неизвестными и  записана её расширенная матрица 
. В наиболее распространенном случае получаются стандартные  ступеньки 
, и так каждый день…. Одно и то же – как беспросветный  ноябрьский дождь.
На некоторое время развевает тоску 
 приведения матрицы к ступенчатому виду: 
, причём он совершенно равноценен и может быть неудобен  только по причине субъективного восприятия. Но всё рано или поздно приедается….  И подумал тогда Ж
рдан – а зачем вообще мучиться с обратным ходом  гауссовского алгоритма? Не проще ли сразу получить ответ 
 с помощью  дополнительных элементарных преобразований?
…да, такое бывает только по любви =)
Для освоения данного урока «чайникам» придётся пойти путём  Ж
рдана и прокачать элементарные преобразования хотя бы среднего уровня,  прорешав, минимум, 15-20 соответствующих заданий. Поэтому если вы смутно  понимаете, о чём идёт разговор и/или у вас возникнет недопонимание чего-либо по  ходу занятия, то рекомендую ознакомиться с темой в следующем порядке:
;
;
;
. 
Ну, и совсем замечательно, если отработано 
.
Как все поняли, метод Гаусса-Жордана представляет собой  модификацию 
 и с реализацией  основной, уже озвученной выше идеи, мы встретимся на ближайших экранах. Кроме  того, в число немногочисленных примеров данной статьи вошло важнейшее  приложение – 
. 
Не мудрствуя лукаво:
Решить систему методом Гаусса-Жордана

      
: это  первое задание урока 
, где мы 5 раз трансформировали расширенную матрицу системы и  привели её к ступенчатому виду:

      
Теперь вместо 
 в игру вступают дополнительные элементарные преобразования. Сначала  нам необходимо получить нули на этих местах: 
, 

  а потом ещё один ноль вот здесь: 
.
Идеальный с точки зрения простоты случай:

      
(6) Ко второй строке прибавили третью строку. К первой  строке прибавили третью строку.
(7) К первой строке прибавили вторую строку, умноженную на  –2.
Не могу удержаться от иллюстрации итоговой системы:

      
: 
Предостерегаю читателей от шапкозакидательского настроения –  это был простейший демонстрационный пример. Для метода Гаусса-Жордана  характерны свои специфические приёмы и не самые удобные вычисления, поэтому,  пожалуйста, настройтесь на серьёзную работу.
Не хочу показаться категоричным или придирчивым, но  в подавляющем большинстве источников информации, которые я видел, типовые  задачи рассмотрены крайне плохо – нужно обладать семью пядями во лбу и  потратить массу времени/нервов на тяжёлое неуклюжее решение с дробями. За годы  практики мне удалось отшлифовать, не скажу, что самую лучшую, но рациональную и  достаточно лёгкую методику, которая доступна всем, кто владеет арифметическими  действиями:
Решить систему линейных уравнений методом Гаусса-Жордана.

      
: первая  часть задания хорошо знакома:

      
(1) Ко второй строке прибавили  первую строку, умноженную на –1. К третьей строке прибавили первую строку,  умноженную на 3. К четвертой строке прибавили первую строку, умноженную на –5.
(2) Вторую строку разделили на 2,  третью строку разделили на 11, четвёртую строку разделили на 3.
(3) Вторая и третья строки  пропорциональны, 3-ю строку удалили. К четвёртой строке прибавили вторую  строку, умноженную на –7
(4) Третью строку разделили на 2.
Очевидно, что система имеет  бесконечно много решений, и наша задача – привести её расширенную матрицу к  виду 
.
Как действовать дальше? Прежде всего, следует отметить, что  мы лишились вкусного элементарного преобразования – перестановки строк. Точнее  говоря, переставить-то их можно, но в этом нет смысла (просто выполним лишние действия). И далее целесообразно  придерживаться следующего шаблона:
Находим 
 чисел третьего столбца (1, –1 и 3), т.е. – наименьшее число,  которое бы делилось без остатка и на 1, и на –1 и на 3. В данном случае, это,  конечно же, «тройка». Теперь 
, и этими  соображениями обусловлено 5-е преобразование матрицы:
(5) Первую строку умножаем на –3, вторую строку умножаем на  3. Вообще говоря, первую строку можно было умножить тоже на 3, но это было бы  менее удобно для следующего действия. К хорошему привыкаешь быстро:

    (6) Ко второй строке  прибавили третью  строку. К первой строке  прибавили третью строку.
(7) Во втором столбце два ненулевых значения (24 и 6) и нам  снова нужно получить 
. В данном случае всё сложилось довольно удачно – наименьшее  кратное 24, и эффективнее всего умножить вторую строку на –4.
(8) К первой строке прибавили вторую.
(9) Заключительный штрих: первую строку разделили на –3,  вторую строку разделили на –24 и третью строку разделили на 3. Это действие  выполняется 
В результате элементарных преобразований получена  эквивалентная исходной система:

      
Элементарно выражаем базисные переменные через свободную:

      
и записываем:
: общее  решение: 
В подобных примерах применение рассмотренного алгоритма чаще  всего оправдано, поскольку обратный ход 
 обычно требует трудоёмких и неприятных вычислений с дробями.
И, разумеется, крайне желательна проверка, которая  выполняется по обычной схеме, рассмотренной на уроке 
.
Для самостоятельного решения:
Найти базисное решение с помощью элементарных преобразований

      
Такая формулировка задачи предполагает использование метода  Гаусса-Жордана, и в образце решения матрица приводится к стандартному виду 
 с базисными переменными 
. Однако всегда держите на заметке, что 
. Так, например,  если в первом столбце громоздкие числа, то вполне допустимо привести матрицу к  виду 
  (базисные переменные 
), или к виду 
 (базисные переменные 
), или даже к виду 
 с базисными  переменными 
. Существуют и другие варианты.
Но всё-таки это крайние случаи – не стОит лишний раз  шокировать преподавателей своими знаниями, техникой решения и уж тем более не  надо выдавать экзотических жордановсих результатов вроде 
. Впрочем, бывает трудно удержаться от нетипового базиса,  когда в исходной матрице, скажем, в 4-м столбце есть два готовых нуля.
Если в расширенной матрице данных размеров вдруг  обнаруживается пара 
 строк, то её следует попытаться привести к привычному виду  
 с базисными  переменными 
. Образец такого решения есть в Примере №7 статьи об 
,  причём там 
.
Продолжаем совершенствовать свои навыки на следующей  прикладной задаче:
Обычно условие формулируют сокращённо, но, по существу, здесь  также работает алгоритм Гаусса-Жордана. Более простой метод нахождения 
 
 для квадратной матрицы 
 мы давным-давно  рассмотрели на соответствующем уроке, и суровой поздней осенью тёртые студенты  осваивают мастерский способ решения. 
Краткое содержание предстоящих действий таково: сначала следует  записать квадратную матрицу 
 в тандеме с единичной  матрицей: 
. Затем с помощью элементарных преобразований необходимо  получить единичную матрицу слева, при этом 
  справа нарисуется обратная матрица. Схематически решение выглядит следующим  образом:
 
Найдём обратную матрицу для матрицы 
 с помощью элементарных  преобразований. Для этого запишем её в одной упряжке с единичной  матрицей, и понеслась «двойка скакунов»:

    
(1) Ко второй строке прибавили первую строку, умноженную на  –3.
(2) К первой строке прибавили вторую строку.
(3) Вторую строку разделили на –2.
: 
 
Сверьтесь с ответом первого примера урока 
Но то была очередная заманивающая задачка – в  действительности решение гораздо более длительно и кропотливо. Как  правило, вам будет предложена матрица «три на три»:
Найти обратную матрицу с помощью элементарных преобразований

      
:  присоединяем единичную матрицу и начинаем выполнять преобразования,  придерживаясь алгоритма «обычного» 
:

    
(1) Первую и третью строки поменяли местами. На первый  взгляд, перестановка строк кажется нелегальной, но на самом деле переставлять  их можно – ведь по итогу 
 слева нам нужно  получить единичную матрицу, а справа же «принудительно» получится именно  матрица 
 
. Обратите внимание, что здесь вместо перестановки можно  организовать «шестёрки» в 1-м столбце 
. Решение через НОК особенно удобно,  когда в первом столбце отсутствуют «единицы».
(2) Ко 2-й и 3-й строкам прибавили 1-ю строку, умноженную  на –2 и –3 соответственно.
(3) К 3-й строке прибавили 2-ю строку, умноженную на –1
Вторая часть решения проводится по уже известной из  предыдущего параграфа схеме: перестановки строк становятся бессмысленными, и мы  находим наименьшее общее кратное чисел третьего столбца (1, –5, 4): 20. Существует строгий алгоритм нахождения  НОК, но здесь обычно хватает подбора. Ничего страшного, если взять бОльшее  число, которое делится и на 1, и на –5, и на 4, например, число 40. Отличие будет в  более громоздких вычислениях.  
К слову о вычислениях. Для решения задачи совсем не зазорно  вооружиться микрокалькулятором – числа здесь фигурируют немалые, и будет очень  обидно допустить вычислительную ошибку.
Итак:
(4) Третью строку умножаем на 5, вторую строку на 4, первую  строку на «минус двадцать»:
(5) К 1-й и 2-й строкам прибавили третью строку.

    

    (6) Первую и третью строки разделили на 5, вторую строку  умножили на –1.
(7) Наименьшее общее кратное ненулевых чисел второго столбца  (–20 и 44) равно 220. Первую строку умножаем на 11, вторую строку – на 5.
(8) К первой строке прибавили вторую строку.
(9) Первую строку умножили на –1, вторую строку разделили  «обратно» на 5.
(10) Теперь 
 (44, 44 и 4). Совершенно понятно, что это  число 44. Третью строку умножаем на 11.
(11) Каждую строку делим на 44. 
Таким образом, обратная матрица:

      
Внесение и вынесение 
-й, в принципе, лишние действия, но того требует протокол оформления  задачи.
: 
Проверка выполняется по обычной схеме, рассмотренной на  уроке об 
.
Продвинутые люди могут несколько сократить решение,  но должен предупредить, спешка тут чревата ПОВЫШЕННЫМ риском допустить ошибку.
Аналогичное задание для самостоятельного решения:
Найти обратную матрицу методом Гаусса-Жордана.

      
Примерный образец оформления задачи внизу страницы.  И ради того, чтобы вы «не проехали мимо с песнями» я оформил решение в уже упомянутом стиле – исключительно через НОК столбцов без единой перестановки строк и  дополнительных искусственных преобразований. По моему мнению, 
.
Иногда бывает удобно более короткое «модернистское» решение,  которое заключается в следующем: на первом шаге всё как обычно: 
. 
На втором шаге накатанным приёмом (через НОК чисел 2-го  столбца) организуются сразу два нуля во втором столбце: 
. Перед данным действием особенно трудно устоять, если во  2-м столбце нарисовались одинаковые по модулю числа, например, те же банальные «единицы». 
И, наконец, на третьем шаге точно так же получаем нужные  нули в третьем столбце: 
. 
Живой пример авангарда можно  посмотреть во втором задании урока о 
.
Что касается размерности, то в большинстве случаев  приходится разруливать матрицу «три на три». Однако время от времени  встречается лайт-версия задачи с матрицей «два на два» и хард… – специально для  всех читателей mathprofi.ru:
Найти обратную матрицу с помощью элементарных преобразований

    
Это задание из моей собственной физматовской контрольной  работы по алгебре, …эх, где мой первый курс  =) Пятнадцать лет назад 
, я уложился в 8 шагов, а сейчас  – всего лишь в 6! Матрица, кстати, весьма творческая – на первом же шаге  просматривается несколько заманчивых путей решения. Моя поздняя версия внизу  страницы.  
И заключительный совет – после таких примеров очень полезна  гимнастика для глаз и какая-нибудь хорошая музыка для релаксации =)
Желаю успехов!

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

      

    

    

    

    

    

    

    

    
 
 
 
 
